{
 "Resources": {
  "StorageBucket19DB2FF8": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "SSEAlgorithm": "AES256"
       }
      }
     ]
    },
    "CorsConfiguration": {
     "CorsRules": [
      {
       "AllowedHeaders": [
        "*"
       ],
       "AllowedMethods": [
        "GET",
        "POST",
        "PUT"
       ],
       "AllowedOrigins": [
        "*"
       ]
      }
     ]
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    },
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     },
     {
      "Key": "aws-cdk:cr-owned:47257bc5",
      "Value": "true"
     }
    ],
    "VersioningConfiguration": {
     "Status": "Enabled"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "WorkshopOne/StorageBucket/Resource"
   }
  },
  "StorageBucketPolicy41A048DB": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "StorageBucket19DB2FF8"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "StorageBucket19DB2FF8",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "StorageBucket19DB2FF8",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "StorageBucket19DB2FF8",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "StorageBucket19DB2FF8",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Principal": {
        "CanonicalUser": {
         "Fn::GetAtt": [
          "webDeploymentNestedStackwebDeploymentNestedStackResource0F82DA22",
          "Outputs.WorkshopOnewebDeploymentwebDeploymentOAI9AF24AACS3CanonicalUserId"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "StorageBucket19DB2FF8",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "StorageBucket19DB2FF8",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "s3:GetObject",
       "Effect": "Allow",
       "Principal": {
        "CanonicalUser": {
         "Fn::GetAtt": [
          "webDeploymentNestedStackwebDeploymentNestedStackResource0F82DA22",
          "Outputs.WorkshopOnewebDeploymentwebDeploymentOAI9AF24AACS3CanonicalUserId"
         ]
        }
       },
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "StorageBucket19DB2FF8",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WorkshopOne/StorageBucket/Policy/Resource"
   }
  },
  "StorageBucketAutoDeleteObjectsCustomResource105C81BD": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "StorageBucket19DB2FF8"
    }
   },
   "DependsOn": [
    "StorageBucketPolicy41A048DB"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "WorkshopOne/StorageBucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WorkshopOne/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "a657308e723bb9460b800cb3b47dadb74e28243edfe246bf7755c45ec312eb97.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Description": {
     "Fn::Join": [
      "",
      [
       "Lambda function for auto-deleting objects in ",
       {
        "Ref": "StorageBucket19DB2FF8"
       },
       " S3 bucket."
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
   ],
   "Metadata": {
    "aws:cdk:path": "WorkshopOne/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
    "aws:asset:path": "asset.a657308e723bb9460b800cb3b47dadb74e28243edfe246bf7755c45ec312eb97",
    "aws:asset:property": "Code"
   }
  },
  "LeaderboardDatabase1341F1A0": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "playerId",
      "AttributeType": "S"
     },
     {
      "AttributeName": "status",
      "AttributeType": "N"
     },
     {
      "AttributeName": "score",
      "AttributeType": "N"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "GlobalSecondaryIndexes": [
     {
      "IndexName": "rankingIndex",
      "KeySchema": [
       {
        "AttributeName": "status",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "score",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "playerId",
      "KeyType": "HASH"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "WorkshopOne/LeaderboardDatabase/Resource"
   }
  },
  "getPlayerInfoLambdaNestedStackgetPlayerInfoLambdaNestedStackResourceA2E5347A": {
   "Type": "AWS::CloudFormation::Stack",
   "Properties": {
    "TemplateURL": {
     "Fn::Join": [
      "",
      [
       "https://s3.",
       {
        "Ref": "AWS::Region"
       },
       ".",
       {
        "Ref": "AWS::URLSuffix"
       },
       "/",
       {
        "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
       },
       "/d8cad328ba02f102e1968750f8363908da3d1a9cd493306b20415c6b6ffd3df4.json"
      ]
     ]
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "WorkshopOne/getPlayerInfoLambda.NestedStack/getPlayerInfoLambda.NestedStackResource",
    "aws:asset:path": "WorkshopOnegetPlayerInfoLambda81F79B39.nested.template.json",
    "aws:asset:property": "TemplateURL"
   }
  },
  "getPlayerInfoLambdaFUNCServiceRole3009444E": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WorkshopOne/getPlayerInfoLambda_FUNC/ServiceRole/Resource"
   }
  },
  "getPlayerInfoLambdaFUNCServiceRoleDefaultPolicy588944D8": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "LeaderboardDatabase1341F1A0",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "LeaderboardDatabase1341F1A0",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "getPlayerInfoLambdaFUNCServiceRoleDefaultPolicy588944D8",
    "Roles": [
     {
      "Ref": "getPlayerInfoLambdaFUNCServiceRole3009444E"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WorkshopOne/getPlayerInfoLambda_FUNC/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "getPlayerInfoLambdaFUNC204EF2E9": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "c4c2fdac1a49cffb97d845008076180c9fe832855018df35cb9442c7bc09fa55.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "LeaderboardDatabase1341F1A0"
      }
     }
    },
    "EphemeralStorage": {
     "Size": 512
    },
    "Handler": "getPlayerInfo.handler",
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "getPlayerInfoLambdaFUNCServiceRole3009444E",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 300
   },
   "DependsOn": [
    "getPlayerInfoLambdaFUNCServiceRoleDefaultPolicy588944D8",
    "getPlayerInfoLambdaFUNCServiceRole3009444E"
   ],
   "Metadata": {
    "aws:cdk:path": "WorkshopOne/getPlayerInfoLambda_FUNC/Resource",
    "aws:asset:path": "asset.c4c2fdac1a49cffb97d845008076180c9fe832855018df35cb9442c7bc09fa55",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "putPlayerRecordLambdaNestedStackputPlayerRecordLambdaNestedStackResource27FD37F4": {
   "Type": "AWS::CloudFormation::Stack",
   "Properties": {
    "TemplateURL": {
     "Fn::Join": [
      "",
      [
       "https://s3.",
       {
        "Ref": "AWS::Region"
       },
       ".",
       {
        "Ref": "AWS::URLSuffix"
       },
       "/",
       {
        "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
       },
       "/39c41ddbab1e56477a9da571783e47cdea6fb24e7ab0f2b7330bfc4273717852.json"
      ]
     ]
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "WorkshopOne/putPlayerRecordLambda.NestedStack/putPlayerRecordLambda.NestedStackResource",
    "aws:asset:path": "WorkshopOneputPlayerRecordLambda86FB93B2.nested.template.json",
    "aws:asset:property": "TemplateURL"
   }
  },
  "putPlayerRecordLambdaFUNCServiceRole30A39759": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WorkshopOne/putPlayerRecordLambda_FUNC/ServiceRole/Resource"
   }
  },
  "putPlayerRecordLambdaFUNCServiceRoleDefaultPolicy30A51374": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "LeaderboardDatabase1341F1A0",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "LeaderboardDatabase1341F1A0",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "putPlayerRecordLambdaFUNCServiceRoleDefaultPolicy30A51374",
    "Roles": [
     {
      "Ref": "putPlayerRecordLambdaFUNCServiceRole30A39759"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WorkshopOne/putPlayerRecordLambda_FUNC/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "putPlayerRecordLambdaFUNC28F5A24A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "7ecb07057ea7883cdbd040efdffc5962b8059dcb680da1bb469fa39581b9c3fa.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "LeaderboardDatabase1341F1A0"
      }
     }
    },
    "EphemeralStorage": {
     "Size": 512
    },
    "Handler": "putPlayerRecord.handler",
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "putPlayerRecordLambdaFUNCServiceRole30A39759",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 300
   },
   "DependsOn": [
    "putPlayerRecordLambdaFUNCServiceRoleDefaultPolicy30A51374",
    "putPlayerRecordLambdaFUNCServiceRole30A39759"
   ],
   "Metadata": {
    "aws:cdk:path": "WorkshopOne/putPlayerRecordLambda_FUNC/Resource",
    "aws:asset:path": "asset.7ecb07057ea7883cdbd040efdffc5962b8059dcb680da1bb469fa39581b9c3fa",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "gatewayNestedStackgatewayNestedStackResource57DC6574": {
   "Type": "AWS::CloudFormation::Stack",
   "Properties": {
    "TemplateURL": {
     "Fn::Join": [
      "",
      [
       "https://s3.",
       {
        "Ref": "AWS::Region"
       },
       ".",
       {
        "Ref": "AWS::URLSuffix"
       },
       "/",
       {
        "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
       },
       "/dc56ceab506c1f70ee9855db907133b1bd9f10a0692c9be8effd45db4550494d.json"
      ]
     ]
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "WorkshopOne/gateway.NestedStack/gateway.NestedStackResource",
    "aws:asset:path": "WorkshopOnegateway97301799.nested.template.json",
    "aws:asset:property": "TemplateURL"
   }
  },
  "gatewayG47300FE6": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Description": "Main Stack Gateway",
    "Name": "gateway_G"
   },
   "Metadata": {
    "aws:cdk:path": "WorkshopOne/gateway_G/Resource"
   }
  },
  "gatewayGDeployment5E93F03Fb66da4cce596bbf290a8e3f302625859": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Main Stack Gateway",
    "RestApiId": {
     "Ref": "gatewayG47300FE6"
    }
   },
   "DependsOn": [
    "gatewayGleaderboardplayerIdGETFBECD330",
    "gatewayGleaderboardplayerIdOPTIONS0DC6B243",
    "gatewayGleaderboardplayerIdDA8E7DBB",
    "gatewayGleaderboardOPTIONS693C9B63",
    "gatewayGleaderboardPOST977C6E1A",
    "gatewayGleaderboard21E1EA44"
   ],
   "Metadata": {
    "aws:cdk:path": "WorkshopOne/gateway_G/Deployment/Resource"
   }
  },
  "gatewayGDeploymentStagedev5D60EE63": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "gatewayGDeployment5E93F03Fb66da4cce596bbf290a8e3f302625859"
    },
    "RestApiId": {
     "Ref": "gatewayG47300FE6"
    },
    "StageName": "dev"
   },
   "Metadata": {
    "aws:cdk:path": "WorkshopOne/gateway_G/DeploymentStage.dev/Resource"
   }
  },
  "gatewayGleaderboard21E1EA44": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "gatewayG47300FE6",
      "RootResourceId"
     ]
    },
    "PathPart": "leaderboard",
    "RestApiId": {
     "Ref": "gatewayG47300FE6"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WorkshopOne/gateway_G/Default/leaderboard/Resource"
   }
  },
  "gatewayGleaderboardOPTIONS693C9B63": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,AuthToken'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE'",
        "method.response.header.Access-Control-Allow-Credentials": "'false'",
        "method.response.header.Access-Control-Allow-Origin": "'*'"
       },
       "StatusCode": "200"
      }
     ],
     "PassthroughBehavior": "NEVER",
     "RequestTemplates": {
      "application/json": "{\"statusCode\": 200}"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Allow-Origin": true
      },
      "StatusCode": "200"
     }
    ],
    "ResourceId": {
     "Ref": "gatewayGleaderboard21E1EA44"
    },
    "RestApiId": {
     "Ref": "gatewayG47300FE6"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WorkshopOne/gateway_G/Default/leaderboard/OPTIONS/Resource"
   }
  },
  "gatewayGleaderboardPOSTApiPermissionWorkshopOnegatewayGF860EA4FPOSTleaderboard9F02E72D": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "putPlayerRecordLambdaFUNC28F5A24A",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "gatewayG47300FE6"
       },
       "/",
       {
        "Ref": "gatewayGDeploymentStagedev5D60EE63"
       },
       "/POST/leaderboard"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WorkshopOne/gateway_G/Default/leaderboard/POST/ApiPermission.WorkshopOnegatewayGF860EA4F.POST..leaderboard"
   }
  },
  "gatewayGleaderboardPOSTApiPermissionTestWorkshopOnegatewayGF860EA4FPOSTleaderboardA8073F7F": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "putPlayerRecordLambdaFUNC28F5A24A",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "gatewayG47300FE6"
       },
       "/test-invoke-stage/POST/leaderboard"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WorkshopOne/gateway_G/Default/leaderboard/POST/ApiPermission.Test.WorkshopOnegatewayGF860EA4F.POST..leaderboard"
   }
  },
  "gatewayGleaderboardPOST977C6E1A": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "putPlayerRecordLambdaFUNC28F5A24A",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "gatewayGleaderboard21E1EA44"
    },
    "RestApiId": {
     "Ref": "gatewayG47300FE6"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WorkshopOne/gateway_G/Default/leaderboard/POST/Resource"
   }
  },
  "gatewayGleaderboardplayerIdDA8E7DBB": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "gatewayGleaderboard21E1EA44"
    },
    "PathPart": "{playerId}",
    "RestApiId": {
     "Ref": "gatewayG47300FE6"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WorkshopOne/gateway_G/Default/leaderboard/{playerId}/Resource"
   }
  },
  "gatewayGleaderboardplayerIdOPTIONS0DC6B243": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,AuthToken'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE'",
        "method.response.header.Access-Control-Allow-Credentials": "'false'",
        "method.response.header.Access-Control-Allow-Origin": "'*'"
       },
       "StatusCode": "200"
      }
     ],
     "PassthroughBehavior": "NEVER",
     "RequestTemplates": {
      "application/json": "{\"statusCode\": 200}"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Allow-Origin": true
      },
      "StatusCode": "200"
     }
    ],
    "ResourceId": {
     "Ref": "gatewayGleaderboardplayerIdDA8E7DBB"
    },
    "RestApiId": {
     "Ref": "gatewayG47300FE6"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WorkshopOne/gateway_G/Default/leaderboard/{playerId}/OPTIONS/Resource"
   }
  },
  "gatewayGleaderboardplayerIdGETApiPermissionWorkshopOnegatewayGF860EA4FGETleaderboardplayerId66224BD5": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "getPlayerInfoLambdaFUNC204EF2E9",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "gatewayG47300FE6"
       },
       "/",
       {
        "Ref": "gatewayGDeploymentStagedev5D60EE63"
       },
       "/GET/leaderboard/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WorkshopOne/gateway_G/Default/leaderboard/{playerId}/GET/ApiPermission.WorkshopOnegatewayGF860EA4F.GET..leaderboard.{playerId}"
   }
  },
  "gatewayGleaderboardplayerIdGETApiPermissionTestWorkshopOnegatewayGF860EA4FGETleaderboardplayerIdF882DE62": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "getPlayerInfoLambdaFUNC204EF2E9",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "gatewayG47300FE6"
       },
       "/test-invoke-stage/GET/leaderboard/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WorkshopOne/gateway_G/Default/leaderboard/{playerId}/GET/ApiPermission.Test.WorkshopOnegatewayGF860EA4F.GET..leaderboard.{playerId}"
   }
  },
  "gatewayGleaderboardplayerIdGETFBECD330": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "getPlayerInfoLambdaFUNC204EF2E9",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "gatewayGleaderboardplayerIdDA8E7DBB"
    },
    "RestApiId": {
     "Ref": "gatewayG47300FE6"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WorkshopOne/gateway_G/Default/leaderboard/{playerId}/GET/Resource"
   }
  },
  "webDeploymentNestedStackwebDeploymentNestedStackResource0F82DA22": {
   "Type": "AWS::CloudFormation::Stack",
   "Properties": {
    "TemplateURL": {
     "Fn::Join": [
      "",
      [
       "https://s3.",
       {
        "Ref": "AWS::Region"
       },
       ".",
       {
        "Ref": "AWS::URLSuffix"
       },
       "/",
       {
        "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
       },
       "/62f83fd0cb8c21c554f5b3fd4600410e6aa8613c31fa17d39e20adebc20bd34f.json"
      ]
     ]
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "WorkshopOne/webDeployment.NestedStack/webDeployment.NestedStackResource",
    "aws:asset:path": "WorkshopOnewebDeploymentC57D3987.nested.template.json",
    "aws:asset:property": "TemplateURL"
   }
  },
  "webDeploymentCFDResponseHeadersPolicyAE5C8A65": {
   "Type": "AWS::CloudFront::ResponseHeadersPolicy",
   "Properties": {
    "ResponseHeadersPolicyConfig": {
     "Name": "WorkshopOnewebDeploymentCFDResponseHeadersPolicyDE7928BF",
     "SecurityHeadersConfig": {
      "ContentTypeOptions": {
       "Override": true
      },
      "FrameOptions": {
       "FrameOption": "SAMEORIGIN",
       "Override": true
      },
      "StrictTransportSecurity": {
       "AccessControlMaxAgeSec": 31536000,
       "IncludeSubdomains": true,
       "Override": true
      },
      "XSSProtection": {
       "ModeBlock": true,
       "Override": true,
       "Protection": true
      }
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WorkshopOne/webDeployment_CFD_ResponseHeadersPolicy/Resource"
   }
  },
  "webDeploymentCFDcachepolicy39ECA2CC": {
   "Type": "AWS::CloudFront::CachePolicy",
   "Properties": {
    "CachePolicyConfig": {
     "DefaultTTL": 3600,
     "MaxTTL": 31536000,
     "MinTTL": 0,
     "Name": {
      "Fn::Join": [
       "",
       [
        "WorkshopOnewebDeploymentCFDcachepolicy03588710-",
        {
         "Ref": "AWS::Region"
        }
       ]
      ]
     },
     "ParametersInCacheKeyAndForwardedToOrigin": {
      "CookiesConfig": {
       "CookieBehavior": "none"
      },
      "EnableAcceptEncodingBrotli": false,
      "EnableAcceptEncodingGzip": false,
      "HeadersConfig": {
       "HeaderBehavior": "none"
      },
      "QueryStringsConfig": {
       "QueryStringBehavior": "none"
      }
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WorkshopOne/webDeployment_CFD_cachepolicy/Resource"
   }
  },
  "webDeploymentCFD2D7DF4CF": {
   "Type": "AWS::CloudFront::Distribution",
   "Properties": {
    "DistributionConfig": {
     "CustomErrorResponses": [
      {
       "ErrorCachingMinTTL": 0,
       "ErrorCode": 404,
       "ResponseCode": 200,
       "ResponsePagePath": "/index.html"
      }
     ],
     "DefaultCacheBehavior": {
      "AllowedMethods": [
       "GET",
       "HEAD",
       "OPTIONS",
       "PUT",
       "PATCH",
       "POST",
       "DELETE"
      ],
      "CachePolicyId": {
       "Ref": "webDeploymentCFDcachepolicy39ECA2CC"
      },
      "Compress": true,
      "ResponseHeadersPolicyId": {
       "Ref": "webDeploymentCFDResponseHeadersPolicyAE5C8A65"
      },
      "TargetOriginId": "WorkshopOnewebDeploymentCFDOrigin14D951268",
      "ViewerProtocolPolicy": "redirect-to-https"
     },
     "DefaultRootObject": "index.html",
     "Enabled": true,
     "HttpVersion": "http2",
     "IPV6Enabled": true,
     "Origins": [
      {
       "DomainName": {
        "Fn::GetAtt": [
         "StorageBucket19DB2FF8",
         "RegionalDomainName"
        ]
       },
       "Id": "WorkshopOnewebDeploymentCFDOrigin14D951268",
       "S3OriginConfig": {
        "OriginAccessIdentity": {
         "Fn::Join": [
          "",
          [
           "origin-access-identity/cloudfront/",
           {
            "Fn::GetAtt": [
             "webDeploymentNestedStackwebDeploymentNestedStackResource0F82DA22",
             "Outputs.WorkshopOnewebDeploymentwebDeploymentOAI9AF24AACRef"
            ]
           }
          ]
         ]
        }
       }
      }
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WorkshopOne/webDeployment_CFD/Resource"
   }
  },
  "webDeploymentDeploymentBucketAwsCliLayer2BE15239": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "Content": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "e2277687077a2abf9ae1af1cc9565e6715e2ebb62f79ec53aa75a1af9298f642.zip"
    },
    "Description": "/opt/awscli/aws"
   },
   "Metadata": {
    "aws:cdk:path": "WorkshopOne/webDeployment_DeploymentBucket/AwsCliLayer/Resource",
    "aws:asset:path": "asset.e2277687077a2abf9ae1af1cc9565e6715e2ebb62f79ec53aa75a1af9298f642.zip",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Content"
   }
  },
  "webDeploymentDeploymentBucketCustomResource1B10209F": {
   "Type": "Custom::CDKBucketDeployment",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
      "Arn"
     ]
    },
    "SourceBucketNames": [
     {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     }
    ],
    "SourceObjectKeys": [
     "6ca453481361879ad8f168fb8607cf52349416ccce20b024dcbf164392375cbe.zip"
    ],
    "DestinationBucketName": {
     "Ref": "StorageBucket19DB2FF8"
    },
    "Prune": true,
    "DistributionId": {
     "Ref": "webDeploymentCFD2D7DF4CF"
    },
    "DistributionPaths": [
     "/*"
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "WorkshopOne/webDeployment_DeploymentBucket/CustomResource/Default"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WorkshopOne/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/Resource"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::",
           {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::",
           {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
           }
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "StorageBucket19DB2FF8",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "StorageBucket19DB2FF8",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "cloudfront:CreateInvalidation",
        "cloudfront:GetInvalidation"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
    "Roles": [
     {
      "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WorkshopOne/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "9eb41a5505d37607ac419321497a4f8c21cf0ee1f9b4a6b29aa04301aea5c7fd.zip"
    },
    "Environment": {
     "Variables": {
      "AWS_CA_BUNDLE": "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem"
     }
    },
    "Handler": "index.handler",
    "Layers": [
     {
      "Ref": "webDeploymentDeploymentBucketAwsCliLayer2BE15239"
     }
    ],
    "Role": {
     "Fn::GetAtt": [
      "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 900
   },
   "DependsOn": [
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
   ],
   "Metadata": {
    "aws:cdk:path": "WorkshopOne/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Resource",
    "aws:asset:path": "asset.9eb41a5505d37607ac419321497a4f8c21cf0ee1f9b4a6b29aa04301aea5c7fd",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/3VSyW4CMQz9lt5DisqFK4uqHloVQdXrKJMYMGSSURbQaJR/b5YpA1J78nu2ZT8vL3Q+p9MndrUTLs4TiTXtd47xM4muqrcz2i89P4Mjq70aUDEbLZF3o3vghSyZhUBEp1ijRSz5xWoJKTeDQCRrasFo/+oVd6hVCt3jDZgGrR3YO+vAfIPJfIfqIMHpW34gyBrab3XpkO0orqBA7KzqmbXgLF0kQwS0UncNKEeL5vXNEQhr8cAcXFkXC4N1ixZz7QGOqcl7x+LqDllFATFfe8MhreNGhkIFf4A7apFcBQXCpfZib3TUlVq3Wll4Aybi+ONU/wQYP8KYdE/XaJ3B2v8u+J6HQFbeOt38qfAxtDH6grElyUtMU8ZzPIxWvieCT+9a74ZTVzLdsIpPxSXSxdWuJOazZqFaCSynVFoAPdnny8uUpsc8WcSJ8cphA3Rb7A+1wgKNtAIAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "WorkshopOne/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "gatewayGEndpoint5D1E33B9": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "gatewayG47300FE6"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "gatewayGDeploymentStagedev5D60EE63"
      },
      "/"
     ]
    ]
   }
  },
  "Params": {
   "Description": "Configuration",
   "Value": {
    "Fn::Join": [
     "",
     [
      "{\"Storage\":{\"AWSS3\":{\"bucket\":\"",
      {
       "Ref": "StorageBucket19DB2FF8"
      },
      "\"}},\"CloudFront\":{\"domainName\":\"",
      {
       "Fn::GetAtt": [
        "webDeploymentCFD2D7DF4CF",
        "DomainName"
       ]
      },
      "\"},\"API\":{\"endpoints\":[{\"name\":\"gateway_G\",\"endpoint\":\"https://",
      {
       "Ref": "gatewayG47300FE6"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "gatewayGDeploymentStagedev5D60EE63"
      },
      "/\",\"region\":\"",
      {
       "Ref": "AWS::Region"
      },
      "\"}]}}"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}